/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const SinginLazyImport = createFileRoute('/singin')()
const SignupLazyImport = createFileRoute('/signup')()
const ConfirmationLazyImport = createFileRoute('/confirmation')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const SinginLazyRoute = SinginLazyImport.update({
  id: '/singin',
  path: '/singin',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/singin.lazy').then((d) => d.Route))

const SignupLazyRoute = SignupLazyImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/signup.lazy').then((d) => d.Route))

const ConfirmationLazyRoute = ConfirmationLazyImport.update({
  id: '/confirmation',
  path: '/confirmation',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/confirmation.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/confirmation': {
      id: '/confirmation'
      path: '/confirmation'
      fullPath: '/confirmation'
      preLoaderRoute: typeof ConfirmationLazyImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupLazyImport
      parentRoute: typeof rootRoute
    }
    '/singin': {
      id: '/singin'
      path: '/singin'
      fullPath: '/singin'
      preLoaderRoute: typeof SinginLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/confirmation': typeof ConfirmationLazyRoute
  '/signup': typeof SignupLazyRoute
  '/singin': typeof SinginLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/confirmation': typeof ConfirmationLazyRoute
  '/signup': typeof SignupLazyRoute
  '/singin': typeof SinginLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/confirmation': typeof ConfirmationLazyRoute
  '/signup': typeof SignupLazyRoute
  '/singin': typeof SinginLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/confirmation' | '/signup' | '/singin'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/confirmation' | '/signup' | '/singin'
  id: '__root__' | '/' | '/confirmation' | '/signup' | '/singin'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  ConfirmationLazyRoute: typeof ConfirmationLazyRoute
  SignupLazyRoute: typeof SignupLazyRoute
  SinginLazyRoute: typeof SinginLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  ConfirmationLazyRoute: ConfirmationLazyRoute,
  SignupLazyRoute: SignupLazyRoute,
  SinginLazyRoute: SinginLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/confirmation",
        "/signup",
        "/singin"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/confirmation": {
      "filePath": "confirmation.lazy.tsx"
    },
    "/signup": {
      "filePath": "signup.lazy.tsx"
    },
    "/singin": {
      "filePath": "singin.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
